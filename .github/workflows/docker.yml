name: Docker Build and Push

on:
  push:
    branches: ["main"]
    tags:
      - "*"

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

permissions:
  contents: read
  packages: write

jobs:
  build-frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Clone and build frontend
        run: |
          git clone --depth=1 https://github.com/jiawesoft/jiascheduler-ui.git frontend
          cd frontend
          npm install -g pnpm
          pnpm install --no-frozen-lockfile
          pnpm build

      - name: Upload frontend dist
        uses: actions/upload-artifact@v4
        with:
          name: frontend-dist
          path: frontend/dist

  docker:
    needs: build-frontend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Download frontend dist
        uses: actions/download-artifact@v4
        with:
          name: frontend-dist
          path: dist

      - name: Get tag name or default to latest
        id: get-tag
        run: |
          if [[ $GITHUB_REF == refs/tags/* ]]; then
            TAG_NAME=${GITHUB_REF#refs/tags/}
          else
            TAG_NAME="latest"
          fi
          echo "Tag name: $TAG_NAME"
          echo "::set-output name=tag_name::$TAG_NAME"

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.tag_name }}

      - name: Verify pushed image
        run: docker pull ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-tag.outputs.tag_name }}
